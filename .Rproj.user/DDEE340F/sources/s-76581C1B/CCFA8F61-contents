library(readxl)
library(tidyverse)
library(fuzzyjoin)

# Process data key ----

#map of players, schools, and NFL entrance
data_key <- readr::read_csv("data/nfl_player_data.csv") %>% 
  mutate(school_letter = str_sub(SCHOOL, 1, 1))

#map of school code to school name
school_map <- read_csv("data/SCHOOLMAP_20200326.csv") %>%
  select(-X4, -X5)

# combine the two
player_school_map <- data_key %>% 
  mutate(SCHOOL = replace(SCHOOL, str_detect(NAME, "ROSS, DANIEL"), "MSNE"),
         SCHOOL = replace(SCHOOL, str_detect(SCHOOL, "CNMO"), "CNMN"),
         SCHOOL = replace(SCHOOL, str_detect(SCHOOL, "LACO"), "LALC")) %>% 
  left_join(school_map, by = c("SCHOOL" = "COL"))

# Process first sheet ----
dat <- readxl::read_xlsx("data/NCAAF Award Winners Consolidated Data - FBS & FCS.xlsx", trim_ws = TRUE)

#drop the last 9 empty columns
dat <- dat[1:14]

dat2 <- dat %>% 
  #rename columns
  rename(name = `Winner's Name`,
         school = `Winner's School`,
         pos_NCAA = `POS - NCAA`,
         pos_NFL = `POS - NFL`,
         year_enterNFL = `Year to Enter NFL`,
         award_name = `Name of Award`,
         split_note = `Note if Split:`,
         pos_specific_award = `Position Specific Award`,
         award_year = Year,
         award_type = Award,
         award_scope = Scope) %>% 
  #trim whitespace
  mutate_if(is.character, str_trim) %>% 
  #clean duplicated entries
  mutate(award_scope = replace(award_scope, str_detect(award_scope, "Pac"), "Pac 12"), 
         award_type = replace(award_type, str_detect(award_type, "Academics"), "Academic"),
         award_type = replace(award_type, str_detect(award_type, "Off  POY"), "Off POY"),
         award_type = replace(award_type, str_detect(award_type, "Special teams"), "Special Teams"),
         year_enterNFL = replace(year_enterNFL, str_detect(year_enterNFL, "N/A"), NA),
         school = replace(school, str_detect(school, "N/A"), NA),
         school = replace(school, str_detect(school, "Washington St"), "Washington State"),
         school = replace(school, str_detect(school, "Southern Mississippi"), "Southern Miss"),
         school = replace(school, str_detect(school, "Pitt"), "Pittsburgh"),
         school = replace(school, str_detect(school, "Oregon St"), "Oregon State"),
         school = replace(school, str_detect(school, "Miss St"), "Mississippi State"),
         school = replace(school, str_detect(school, "Middle Tennessee"), "Middle Tennesee State"),
         school = replace(school, str_detect(school, "Mich. St."), "Michigan State"),
         school = replace(school, str_detect(school, "Lousiana Tech"), "Louisiana Tech"),
         school = replace(school, str_detect(school, "LA Tech"), "Louisiana Tech"),
         school = replace(school, str_detect(school, "Lousiana"), "Louisiana"),
         school = replace(school, str_detect(school, "Georgia\\[5]"), "Georgia"),
         school = replace(school, str_detect(school, "Brigham Young"), "BYU"),
         school = replace(school, str_detect(school, "S Carolina"), "South Carolina"),
         school = replace(school, str_detect(school, "W Michigan"), "Western Michigan"),
         school = replace(school, str_detect(school, "Cal"), "California"),
         school = replace(school, str_detect(school, "TCU"), "Texas Christian"),
         school = replace(school, str_detect(school, "Ole Miss"), "Mississippi"),
         school = replace(school, str_detect(school, "LSU"), "Louisiana St"),
         school = replace(school, str_detect(school, "NC St"), "North Carolina St"),
         school = replace(school, str_detect(school, "Southern Mississippi"), "Southern Miss"),
         school = replace(school, str_detect(school, "UAB"), "AL-Birmingham"),
         school = replace(school, str_detect(school, "UCF"), "Central Florida"),
         school = replace(school, str_detect(school, "Florida International"), "Florida Int"),
         school = replace(school, str_detect(school, "Loisiana-Lafayette"), "Louisiana-Lafayette"),
         school = replace(school, str_detect(school, "BYU"), "Brigham Young"),
         school = replace(school, str_detect(school, "Middle Tennesee St"), "Middle Tenn St"),
         school = replace(school, str_detect(school, "UTSA"), "TX-San Antonio"),
         school = replace(school, str_detect(school, "Navy"), "Naval Academy"),
         name = replace(name, str_detect(name, "Selection|selection|Recipient|recipient|Available|award|None|N/A"), NA),
         name = replace(name, str_detect(name, "D. J. Moore"), "D.J. Moore"),
         name = replace(name, str_detect(name, "D. J. Reed"), "D.J. Reed"),
         name = replace(name, str_detect(name, "A. J. Hawk"), "A.J. Hawk"),
         name = replace(name, str_detect(name, "C. J. Spiller"), "C.J. Spiller"),
         name = replace(name, str_detect(name, "C. J. Ah You"), "C.J. AhYou"),
         name = replace(name, str_detect(name, "J. W. Walsh"), "J.W. Walsh"),
         name = replace(name, str_detect(name, "J. T. Barrett"), "J.T. Barrett"),
         name = replace(name, str_detect(name, "JT Barrett"), "J.T. Barrett"),
         name = replace(name, str_detect(name, "A. Q. Shipley"), "A.Q. Shipley"),
         name = replace(name, str_detect(name, "T. J. Hockenson"), "T.J. Hockenson"),
         school = replace(school, str_detect(name, "Baker Mayfield"), "Oklahoma"), 
         school = replace(school, str_detect(name, "Isaiah Crowell"), "Alabama St"), 
         school = replace(school, str_detect(name, "Ken Dorsey"), "Miami-Fl"), 
         school = replace(school, str_detect(name, "Tyrell Fenroy"), "Louisiana-Lafayette"),
         school = replace(school, str_detect(name, "Elijah McGuire"), "Louisiana-Lafayette"), 
         school = replace(school, str_detect(name, "Charles Sims"), "West Virginia"), 
         school = replace(school, str_detect(name, "Andre Szmyt"), "Syracuse"),
         school = replace(school, str_detect(name, "Vinny Testaverde"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Russell Wilson"), "Wisconsin"),
         school = replace(school, str_detect(name, "Duke Johnson"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Sean Taylor"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Antrel Rolle"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Dan Morgan"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Jonathan Vilma"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Eric Winston"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Bryant McKinnie"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Brett Romberg"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Warren Sapp"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Kellen Winslow"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Santana Moss"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Sean Spence"), "Miami-Fl"),
         school = replace(school, str_detect(name, "Alonzo Harris"), "Louisiana-Lafayette"),
         school = replace(school, str_detect(name, "Ryne Robinson"), "Miami-Oh"),
         school = replace(school, str_detect(name, "Ben Roethlisberger"), "Miami-Oh"),
         school = replace(school, str_detect(name, "Quinten Rollins"), "Miami-Oh"),
         school = str_replace_all(school, "State", "St")) %>% 
  #filter out the award with no recipient
  filter(!is.na(name)) %>% 
  #new columns
  mutate(division = "A",
         award_name = paste(award_name, award_scope, sep = "_")) %>% 
  #separate first and last to switch order to join with key
  tidyr::extract(name, c("FirstName", "LastName"), "([^ ]+) (.*)") %>% 
  mutate(LastName = str_punct(LastName),
         LastName = str_filter(LastName, sep = " ", side = "right", greedy = FALSE),
         name = paste(LastName, FirstName, sep = ", "),
         name = toupper(name)) %>% 
  select(-FirstName, -LastName) %>% 
  filter(name != "NA, NA") %>% 
  ungroup() %>% 
  #columns not in second sheet
  select(-pos_NCAA, -pos_NFL, -split_note, -`Comment:`, -pos_specific_award)

 



# Process second sheet ----
dat_AA <- readxl::read_xlsx("data/NCAAF Award Winners Consolidated Data - FBS & FCS.xlsx", trim_ws = TRUE,
                            sheet = 2)

#drop the last 4 empty columns
dat_AA <- dat_AA[1:9]

dat2_AA <- dat_AA %>% 
  #rename columns
  rename(name = `Winner's Name`,
         school = `Winner's School`,
         year_enterNFL = `Year to Enter NFL`,
         award_name = `Name of Award`,
         award_type = Award,
         award_year = Year,
         award_scope = Scope) %>% 
  #trim whitespace
  mutate_if(is.character, str_trim) %>% 
  #clean duplicated entries
  mutate(award_type = replace(award_type, str_detect(award_type, "Academics"), "Academic"),
         year_enterNFL = replace(year_enterNFL, str_detect(year_enterNFL, "N/A"), NA),
         `First Year` = replace(`First Year`, str_detect(`First Year`, "N/A"), NA),
         `First Year` = as.numeric(`First Year`),
         school = replace(school, str_detect(school, "N/A"), NA),
         school = replace(school, str_detect(school, "VMI"), "Virginia Military Institute"),
         school = replace(school, str_detect(school, "UAlbany"), "Albany"),
         school = replace(school, str_detect(school, "Troy"), "Troy State"),
         school = replace(school, str_detect(school, "Towson"), "Towson State"),
         school = replace(school, str_detect(school, "Southern"), "Southern University"),
         school = replace(school, str_detect(school, "Southeastern La"), "Southeastern Louisiana"),
         school = replace(school, str_detect(school, "Southeast Missouri"), "Southeast Missouri State"),
         school = replace(school, str_detect(school, "Prarie View A&M"), "Prairie View A&M"),
         school = replace(school, str_detect(school, "Leghigh"), "Lehigh"),
         school = replace(school, str_detect(school, "Jacksonville"), "Jacksonville State"),
         school = replace(school, str_detect(school, "Grambling"), "Grambling State"),
         school = replace(school, str_detect(school, "Grambling  State"), "Grambling State"),
         school = replace(school, str_detect(school, "East Tennessee"), "East Tennessee State"),
         school = replace(school, str_detect(school, "Eastern Tennessee St"), "East Tennessee State"),
         school = replace(school, str_detect(school, "Towson St"), "Towson"),
         school = replace(school, str_detect(school, "Chattanooga"), "Tennessee-Chatt"),
         school = replace(school, str_detect(school, "McNeese"), "Mcneese St"),
         school = replace(school, str_detect(school, "Stephen F. Austin"), "Stephen F Austin"),
         school = replace(school, str_detect(school, "Nicholls"), "Nicholls St-La"),
         school = replace(school, str_detect(school, "Youngstown St"), "Youngstown"),
         school = replace(school, str_detect(school, "Monmouth"), "Monmouth-Nj"),
         school = replace(school, str_detect(school, "Saint Francis"), "St Francis-Pa"),
         school = replace(school, str_detect(school, "Presbyterian College"), "Presbyterian"),
         school = replace(school, str_detect(school, "Cal Poly"), "Cal Poly St"),
         school = replace(school, str_detect(school, "Jacksonville St"), "Jacksonville St-Al"),
         school = replace(school, str_detect(school, "UC Davis"), "Cal-Davis"),
         school = replace(school, str_detect(school, "Central Florida (UCF)"), "Central Florida"),
         school = replace(school, str_detect(school, "UCF"), "Central Florida"),
         school = replace(school, str_detect(school, "The Citadel"), "Citadel"),
         name = replace(name, str_detect(name, "Selection|selection|Recipient|recipient|Available|award|None|N/A"), NA),
         name = replace(name, str_detect(name, "A. J. Hines"), "A.J. Hines"),
         
         school = str_replace_all(school, "State", "St")) %>% 
    #filter out the award with no recipient
    filter(!is.na(name)) %>% 
    # clean text in years
    mutate(award_year = str_sub(award_year, 1, 4),
           award_year = as.numeric(award_year)) %>% 
    #new columns
    mutate(division = "AA",
           award_name = paste(award_name, award_scope, sep = "_"))  %>% 
    #separate first and last to switch order to join with key
    tidyr::extract(name, c("FirstName", "LastName"), "([^ ]+) (.*)") %>% 
    mutate(LastName = str_punct(LastName),
           LastName = str_filter(LastName, sep = " ", side = "right", greedy = FALSE),
           name = paste(LastName, FirstName, sep = ", "),
           name = toupper(name))%>% 
    select(-FirstName, -LastName) %>% 
    ungroup() 





#combine A and AA data and data_key ----

# slice data on unique names and then join player mapping
duplicate_names <- bind_rows(dat2, dat2_AA) %>%
    #find duplicates  
    distinct(name, school) %>% 
    group_by(name) %>% 
    summarize(n = n()) %>% 
    filter(n > 1) %>% 
    #add back original variables
    left_join(bind_rows(dat2, dat2_AA), by = c("name" = "name")) %>% 
    #add player school mapping
    left_join(player_school_map, by = c("name" = "NAME", "school" = "College"))
  


# slice data on unique names 
unique_names <- bind_rows(dat2, dat2_AA) %>%
    #join on name and school to fill in whether they entered the NFL
    left_join(player_school_map, by = c("name" = "NAME", "school" = "College")) %>% 
    #filter out duplicate names from above
    filter(!name %in% duplicate_names$name)
  

  
# combine unique and duplicate 
dat_joined <- bind_rows(duplicate_names, unique_names) %>% 
  mutate(enterNFL = ifelse(is.na(YEAR), "no", "yes")) %>% 
  #"Freshman of the Year_Pac 12" stopped after 2008 and split into Off/Def awards so ignoring this award
  filter(award_name != "Freshman of the Year_Pac 12") 



     